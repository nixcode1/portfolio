{"version":3,"sources":["components/SkillsList.js","App.js","reportWebVitals.js","index.js"],"names":["SkillList","title","skillsList","Card","className","elevation","Typography","variant","map","skills","frontendSkills","mobileSkills","backendSkills","App","style","display","paddingTop","motion","div","animate","x","transition","duration","SkillsList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAiBeA,MAbf,YAA2C,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAC1B,OACE,eAACC,EAAA,EAAD,CAAMC,UAAU,QAAQC,UAAU,IAAlC,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BN,IAC1B,6BACGC,EAAWM,KAAI,SAACC,GAAD,OACd,6BAAKA,aCNXC,EAAiB,CAAC,OAAQ,MAAO,aAAc,MAAO,SACtDC,EAAe,CAAC,WAChBC,EAAgB,CAAC,SAAU,UA+BhBC,MA7Bf,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,qBAAKU,MAAO,CAAEC,QAAS,OAAQC,WAAY,MAA3C,SACE,eAACC,EAAA,EAAOC,IAAR,CAAYC,QAAS,CAAEC,EAAG,QAASC,WAAY,CAAEC,SAAU,GAA3D,UACI,qBAAKlB,UAAU,UAAf,wCACA,qBAAKA,UAAU,UAAf,+CAGN,+GAIA,yCAGA,cAACmB,EAAD,CAAYtB,MAAM,qBAAqBC,WAAYS,IACnD,cAACY,EAAD,CAAYtB,MAAM,uBAAuBC,WAAYQ,IACrD,cAACa,EAAD,CAAYtB,MAAM,sBAAsBC,WAAYU,QCd3CY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9258108e.chunk.js","sourcesContent":["import { Card, Typography } from \"@material-ui/core\";\r\nimport \"../App.css\";\r\n\r\n\r\nfunction SkillList({ title, skillsList }) {\r\n  return (\r\n    <Card className=\"stack\" elevation='5'>\r\n      <Typography variant=\"h5\">{title}</Typography>\r\n      <ul>\r\n        {skillsList.map((skills) => (\r\n          <li>{skills}</li>\r\n        ))}\r\n      </ul>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default SkillList;\r\n","import \"./App.css\";\nimport { motion } from \"framer-motion\";\nimport SkillsList from './components/SkillsList';\n\nlet frontendSkills = [\"Html\", \"Css\", \"Javascript\", \"Vue\", \"React\"];\nlet mobileSkills = [\"Flutter\"];\nlet backendSkills = [\"Nodejs\", \"Django\"]\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div style={{ display: \"flex\", paddingTop: \"5%\" }}>\n        <motion.div animate={{ x: \"100%\"}} transition={{ duration: 1}}>\n            <div className='heading'>Hey, I'm Amaechi Precious </div>\n            <div className='heading'>and I'm a software developer</div>\n        </motion.div>\n      </div>\n      <div>\n        I make cross-platform mobile apps and web applications[backend and frontend]\n      </div>\n\n      <div>\n        Skills\n      </div>\n      <SkillsList title=\"Mobile Development\" skillsList={mobileSkills}/>\n      <SkillsList title=\"Frontend Development\" skillsList={frontendSkills}/>\n      <SkillsList title=\"Backend Development\" skillsList={backendSkills}/>\n      {/* <div>\n        Frontend\n        <ul>\n          {frontendSkills.map(skills => <li>{skills}</li>)}\n        </ul>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}